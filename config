ture_name=ngx_http_memc_purge_module_feature
ngx_feature_run=no

ngx_feature="libhiredi library"
ngx_feature_path="/usr/local/include"
ngx_feature_libs="-lmemcached -lrt -lcrypto"

. auto/feature

if [ $ngx_found = yes ]; then
    CORE_INCS="$CORE_INCS $ngx_feature_path"
    CORE_LIBS="$CORE_LIBS $ngx_feature_libs"
else
    echo "$0: error : libmemcached/crypto was needed by ngx_http_memc_purge_module."
    exit 1
fi

CORE_INCS="$CORE_INCS $ngx_addon_dir/src"
ngx_addon_name=ngx_http_memc_purge_module

if test -n "$ngx_module_link"; then

    if [ $ngx_module_link = ADDON ]; then
        ngx_module_type=HTTP
    fi

    ngx_module_name=ngx_http_memc_purge_module
    ngx_module_srcs="$ngx_addon_dir/src/ngx_http_memc_purge_memop.c \
                     $ngx_addon_dir/src/ngx_http_memc_purge_module.c \
                     $ngx_addon_dir/src/ngx_http_memc_purge_gp.c \
                     $ngx_addon_dir/src/ngx_http_memc_purge_crypt.c"

    . auto/module

else

    HTTP_MODULES="$HTTP_MODULES ngx_http_memc_purge_module"

    NGX_ADDON_SRCS="$NGX_ADDON_SRCS $ngx_addon_dir/src/ngx_http_memc_purge_memop.c"
    NGX_ADDON_SRCS="$NGX_ADDON_SRCS $ngx_addon_dir/src/ngx_http_memc_purge_module.c"
    NGX_ADDON_SRCS="$NGX_ADDON_SRCS $ngx_addon_dir/src/ngx_http_memc_purge_gp.c"
    NGX_ADDON_SRCS="$NGX_ADDON_SRCS $ngx_addon_dir/src/ngx_http_memc_purge_crypt.c"

fi
